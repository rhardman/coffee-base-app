// Generated by CoffeeScript 1.3.1
(function() {
  var CLI, Config, Logger, optimist,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  optimist = require('optimist');

  Logger = require('./logger');

  Config = require('./config');

  /**
   * The command line interface class.
  */


  CLI = (function() {

    CLI.name = 'CLI';

    function CLI(pkg_info) {
      this.pkg_info = pkg_info;
      this.set_defaults = __bind(this.set_defaults, this);

      this.set_file = __bind(this.set_file, this);

      this.set_env = __bind(this.set_env, this);

      this.set_argv = __bind(this.set_argv, this);

      this.set_overrides = __bind(this.set_overrides, this);

      this.configure = __bind(this.configure, this);

      this.config = Config.get();
      this.logger = Logger.get();
      this.argv = optimist.usage("Usage: " + this.pkg_info.name).alias('c', 'config').describe('c', 'Load the configuration file')["default"]('c', "/etc/baseapp.json").alias('h', 'help').describe('h', 'Shows this message')["default"]('h', false).argv;
      this.configure();
      if (this.config.get('help').toString() === "true") {
        optimist.showHelp();
        process.exit(0);
      }
    }

    CLI.prototype.configure = function() {
      this.set_overrides();
      this.set_argv();
      this.set_env();
      this.set_file();
      return this.set_defaults();
    };

    CLI.prototype.set_overrides = function() {
      return this.config.overrides({});
    };

    CLI.prototype.set_argv = function() {
      return this.config.add('optimist_args', {
        type: 'literal',
        store: this.argv
      });
    };

    CLI.prototype.set_env = function() {
      return this.config.env({
        whitelist: []
      });
    };

    CLI.prototype.set_file = function() {
      return this.config.file({
        file: this.config.get('c')
      });
    };

    CLI.prototype.set_defaults = function() {
      return this.config.defaults({});
    };

    return CLI;

  })();

  module.exports = CLI;

}).call(this);
