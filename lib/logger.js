// Generated by CoffeeScript 1.3.1
(function() {
  var Logger, Singleton, log4js,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  Singleton = require('./singleton');

  log4js = require('log4js');

  /**
   * Logging class that acts as a singleton.
  */


  Logger = (function(_super) {

    __extends(Logger, _super);

    Logger.name = 'Logger';

    /**
     * At some point we're going to want to allow appenders here.
    */


    function Logger() {
      return log4js.getLogger();
    }

    return Logger;

  })(Singleton);

  module.exports = Logger;

}).call(this);
